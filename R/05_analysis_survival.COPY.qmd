---
title: "05_analysis_survival"
format: html
editor: visual
---

# Load data

```{r}
clinical_data <- read_tsv(
  file = "../data/clinical_data_clean.tsv")
```

# Survival analysis

With a survival analysis of the breast cancer data set, we will visualize survival curves to understand the overall survival probability over time for breast cancer patients. Evaluate the impact of key variables, such as age, tumor size, mutation count, and treatment options on overall survival. Furthermore, we will identify factors that significantly affect the survival outcomes of breast cancer patients and compare survival curves between patient subgroups based on specific characteristics, such as ER status, HER2 status and treatment type. We will also identify patient groups at higher risk of poor outcomes for potential targeted interventions or personalized treatment strategies.

## Age Distribution

Converting the variable 'overall_survival' to a factor is done to represent it as a categorical variable, and to avoid misinterpretation of the numerical values given in the variable.

```{r}

# Convert the 'overall_survival' variable to a factor

clinical_data <- clinical_data |>
  mutate(overall_survival = as.factor(overall_survival))
```

To explore the distribution of ages at diagnosis for patients who survived and those who did not, we identified whether certain age at diagnosis are associated with survived and died patients:

```{r}

library(ggplot2)

age_boxplot <- ggplot(data = clinical_data,
    mapping = aes(x = overall_survival, y = age_at_diagnosis, fill = overall_survival)) +
  geom_boxplot(alpha = 0.5, 
               show.legend = FALSE) +
  labs(title = "The distribution of Patient Survival by Ages at Diagnosis",
       x = "Patient Survival", 
       y = "Age at Diagnosis", subtitle = str_c("Labelling: Died = 0, ", "Survived = 1")) +
  scale_fill_manual(values = c("0" = "red", "1" = "green"), 
                    labels = c("Died", "Survived")) +
  theme_classic(base_size = 12,
                base_family = "Avenir")

print(age_boxplot)
```

We create a new variable 'age_group' based on the variable 'age_at_diagnosis', for categorizing patients into different age groups.

```{r}

clinical_data <- clinical_data |>
  mutate(age_group = cut(age_at_diagnosis, breaks = c(0, 40, 60, 80, Inf), labels = c("0-40", "41-60", "61-80", "81+")))
```

To observe whether certain age groups have higher proportion of survival, we visualize the distribution of age groups based on the patient survival status, making bar chart:

```{r}

age_bar <- clinical_data |>
  ggplot(mapping = aes(x = age_group, fill = overall_survival)) +
  geom_bar(alpha = 0.5) +
  labs(title = "Distribution of Age Groups in terms of Patient Survival",
       x = "Age Groups",
       y = "Number of patients",
       fill = "Patient Survival") +
  scale_fill_manual(values = c("0" = "red", "1" = "green"), 
                    labels = c("Died", "Survived")) +  
  scale_x_discrete(labels = c("0" = "No", "1" = "Yes")) +
  theme_classic(base_size = 12,
                base_family = "Avenir")
print(age_bar)
```

Each bar represents an age group, and the bars are colored according to survival status. The height of each bar indicated the number of patients in each age group.

The box plots below illustrate a distribution of tumor diameter (mm) and survival of the patients across different age groups. Each box represents a specific age group, and the vertical axis shows the tumor diameter. The bars are colored according to survival status.

```{r}

age_tumor_survival_boxplot <- ggplot(data = clinical_data, 
                                     mapping = aes(x = age_group, 
                                                   y = tumor_size, 
                                                   fill = overall_survival)) +
  geom_boxplot(alpha = 0.5, show.legend = TRUE) +
  labs(title = "The Distribution of Tumor Size and Overall Survival by Age Groups",
       x = "Age Group (years)",
       y = "Tumor Diameter (mm)",
       fill = "Patient Survival") +
  scale_fill_manual(values = c("0" = "red", "1" = "green"),
                    labels = c("Died", "Survived")) +
  theme_classic(base_size = 12,
                base_family = "Avenir")

# Print the boxplot
print(age_tumor_survival_boxplot)
```

##RETTE I DETTE TEKST:The variability of tumor sizes within each age group differs less for the first three age groups, but differs more with the fourth age group. by looking at the points outside the whiskers, many more outliers are represent for the age group 41-60 and 61-80, which means more unusal tumor sizes are represent within the age groups compared to the age groups 0-40 and 81+.

### Tumor Characteristics

### Log transformation

### 

DIstribution of clinical Treatment traits

### 

```{r}

library(ggplot2)

lymph_boxplot <- ggplot(data = clinical_data, aes(y = as.factor(lymph_nodes_examined_positive), x = tumor_size, color = lymph_nodes_examined_positive)) +   
  geom_boxplot(alpha = 0.5, 
               show.legend = FALSE) +
  labs(title = "The Distribution of Positive Lymph Nodes according to Tumor Diameter",
       x = "Tumor Size", 
       y = "Positive Lymph Nodes") +
  theme_classic(base_size = 10,
                base_family = "Avenir")

print(lymph_boxplot)

```

```{r}
# Plot 1: Distribution of Overall Survival based on Chemotherapy
chemotherapy_chart <- clinical_data |>
  ggplot(aes(x = factor(chemotherapy), fill = factor(overall_survival))) +
  geom_bar(alpha = 0.5) +
  labs(title = "The Survival of Breast Cancer Patients Treated with Different Clinical Treatments",
       x = "Chemotherapy",
       y = "Number of Patients",
       fill = "Survival") +
  scale_fill_manual(values = c("0" = "red", "1" = "green"), 
                    labels = c("Died", "Survived")) +  
  scale_x_discrete(labels = c("0" = "No", "1" = "Yes")) +
  theme_classic(base_size = 9,
                base_family = "Avenir")

# Plot 2: Distribution of Overall Survival based on Homone Therapy

hormone_chart <- clinical_data |>
  ggplot(aes(x = factor(hormone_therapy), fill = factor(overall_survival))) +
  geom_bar(alpha = 0.5) +
  labs(
       x = "Hormone Therapy",
       y = "Number of Patients",
       fill = "Survival") +
  scale_fill_manual(values = c("0" = "red", "1" = "green"), 
                    labels = c("Died", "Survived")) +  
  scale_x_discrete(labels = c("0" = "No", "1" = "Yes")) +
  theme_classic(base_size = 10,
                base_family = "Avenir")

# Plot 3: Distribution of Overall Survival based on Radio Therapy

radio_chart <- clinical_data |>
  ggplot(aes(x = factor(radio_therapy), fill = factor(overall_survival))) +
  geom_bar(alpha = 0.5) +
  labs(
       x = "Radio Therapy",
       y = "Number of Patients",
       fill = "Survival") +
  scale_fill_manual(values = c("0" = "red", "1" = "green"), 
                    labels = c("Died", "Survived")) +  
  scale_x_discrete(labels = c("0" = "No", "1" = "Yes")) +
  theme_classic(base_size = 10,
                base_family = "Avenir")

chemotherapy_chart/(hormone_chart + radio_chart)
```

```{r}

# drop the missing values
clinical_data <- na.omit(clinical_data)

clustered_bar_chart <- ggplot(clinical_data, aes(x = `3-gene_classifier_subtype`, fill = pr_status)) +
  geom_bar(position = "dodge", stat = "count") +
  labs(
    title = "Clustered Bar Chart for 3-gene Classifier Subtype and PR Status",
    x = "3-gene Classifier Subtype",
    y = "Count",
    fill = "PR Status"
  ) +
  theme_classic(base_size = 10,
                base_family = "Avenir")

print(clustered_bar_chart)

```

```{r}

tile_plot <- ggplot(data = clinical_data, aes(x = age_at_diagnosis, y = mutation_count, fill = overall_survival_months)) +
  geom_tile(color = "white") +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +
  labs(title = "Multivariate Tile Plot",
       x = "Age at Diagnosis",
       y = "Mutation Count",
       fill = "Overall Survival Months") +
  theme_minimal()

print(tile_plot)
```

```{r}

# Create a Violin plot with ggplot2
violin_plot <- ggplot(clinical_data, aes(x = neoplasm_histologic_grade, y = tumor_size, fill = er_status)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(trim = FALSE) +
  labs(title = "Violin Plot for Neoplasm Histologic Grade and ER Status",
       x = "Neoplasm Histologic Grade",
       y = "Tumor Size",
       fill = "ER Status") +
  theme_classic(base_size = 10,
                base_family = "Avenir")

print(violin_plot)
```

```{r}

# Log-transform the relevant variables
clinical_data <- clinical_data |>
  mutate(
    tumor_size_log = log10(tumor_size),
    mutation_count_log = log10(mutation_count)
  )
```

```{r}

# Calculate mean and standard deviation
mean_tumor_size <- mean(pull(clinical_data, tumor_size_log))
sd_tumor_size <- sd(pull(clinical_data, tumor_size_log))

# Create a histogram with ggplot2
histogram <- ggplot(clinical_data, aes(x = tumor_size_log, y = ..density..)) +
  geom_histogram(fill = "blue", color = "white", alpha = 0.9) +
  labs(title = "",
       x = "Tumor Size",
       y = "Density") +
  theme_minimal()

# Add a normal distribution curve
curve_data <- data.frame(x = seq(min(pull(clinical_data, tumor_size_log)), max(pull(clinical_data, tumor_size_log)), length.out = 100))
curve <- geom_line(data = curve_data,
                   aes(x = x, y = dnorm(x, mean = mean_tumor_size, sd = sd_tumor_size)),
                   color = "red")

# Combine the histogram and curve
final_plot <- histogram + curve

# Print the plot
print(final_plot)

```

```{r}


# Calculate mean and standard deviation
mean_tumor_size <- mean(pull(clinical_data, tumor_size))
sd_tumor_size <- sd(pull(clinical_data, tumor_size))

# Create a histogram with ggplot2
histogram <- ggplot(clinical_data, aes(x = tumor_size, y = ..density..)) +
  geom_histogram(fill = "blue", color = "white", alpha = 0.9) +
  labs(title = "",
       x = "Tumor Size",
       y = "Density") +
  theme_minimal()

# Add a normal distribution curve
curve_data <- data.frame(x = seq(min(pull(clinical_data, tumor_size)), max(pull(clinical_data, tumor_size)), length.out = 100))
curve <- geom_line(data = curve_data,
                   aes(x = x, y = dnorm(x, mean = mean_tumor_size, sd = sd_tumor_size)),
                   color = "red")

# Combine the histogram and curve
final_plot <- histogram + curve

# Print the plot
print(final_plot)
```

```{r}

mean_mutation_count <- mean(pull(clinical_data, mutation_count))
sd_mutation_count <- sd(pull(clinical_data, mutation_count))

# Create a histogram with ggplot2
histogram <- ggplot(clinical_data, aes(x = mutation_count, y = ..density..)) +
  geom_histogram(fill = "blue", color = "white", alpha = 0.9) +
  labs(title = "",
       x = "Tumor Size",
       y = "Density") +
  theme_minimal()

# Add a normal distribution curve
curve_data <- data.frame(x = seq(min(pull(clinical_data, mutation_count)), max(pull(clinical_data, mutation_count)), length.out = 100))
curve <- geom_line(data = curve_data,
                   aes(x = x, y = dnorm(x, mean = mean_mutation_count, sd = sd_mutation_count)),
                   color = "red")

# Combine the histogram and curve
final_plot <- histogram + curve

# Print the plot
print(final_plot)
```

```{r}

mean_mutation_count <- mean(pull(clinical_data, mutation_count_log))
sd_mutation_count <- sd(pull(clinical_data, mutation_count_log))

# Create a histogram with ggplot2
histogram <- ggplot(clinical_data, aes(x = mutation_count_log, y = ..density..)) +
  geom_histogram(fill = "blue", color = "white", alpha = 0.9) +
  labs(title = "",
       x = "Tumor Size",
       y = "Density") +
  theme_minimal()

# Add a normal distribution curve
curve_data <- data.frame(x = seq(min(pull(clinical_data, mutation_count_log)), max(pull(clinical_data, mutation_count_log)), length.out = 100))
curve <- geom_line(data = curve_data,
                   aes(x = x, y = dnorm(x, mean = mean_mutation_count, sd = sd_mutation_count)),
                   color = "red")

# Combine the histogram and curve
final_plot <- histogram + curve

# Print the plot
print(final_plot)
```

```{r}

my_plot <- ggplot(data = data,
                  mapping = aes(x = age_at_diagnosis,
                                y = tumor_size,
                                label = patient_id)) +
  geom_label()

print(my_plot)
```

```{r}

survival_rate <- mean(pull(data, overall_survival))

survival_rate
```

```{r}

library(ggplot2)

# Assuming your_data is your data frame
plot_data <- clinical_data %>%
  ggplot(aes(x = tumor_size, y = mutation_count)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Add linear regression line
  labs(title = "Scatter Plot of Tumor Size and Mutation Count with Linear Smooth Line",
       x = "Tumor Size",
       y = "Mutation Count")

print(plot_data)

```

```{r}

clinical_data %>%
  ggplot(aes(x = integrative_cluster, y = mutation_count)) +
  geom_boxplot(fill = "skyblue", alpha = 0.7) +
  labs(title = "Box Plot of Mutation Count by Integrative Cluster",
       x = "Integrative Cluster",
       y = "Mutation Count") +
  theme_minimal()

```

```{r}


clinical_data %>%
  ggplot(aes(x = pull(clinical_data, "cancer_type_detailed"), fill = pull(clinical_data, "her2_status"))) +
  geom_bar() +
  labs(title = "Stacked Bar Chart for Cancer Type and Her2 Status",
       x = "Cancer Type",
       y = "Count") +
  theme_minimal()

```

```{r}

library(ggplot2)
library(dplyr)

# Assuming your_data is your data frame
clinical_data %>%
  ggplot(aes(x = pull(clinical_data, "tumor_size"), y = pull(clinical_data, "mutation_count"),
             color = interaction(pull(clinical_data, "hormone_therapy"),
                                 pull(clinical_data, "chemotherapy"),
                                 pull(clinical_data, "radio_therapy")))) +
  geom_point(alpha = 0.7) +
  labs(title = "Point Plot of Mutation Count by Tumor Size and Therapies",
       x = "Tumor Size",
       y = "Mutation Count",
       color = "Therapies") +
  theme_minimal()

```

```{r}

clinical_data %>%
  ggplot(aes(x = pull(clinical_data, "er_status"), y = pull(clinical_data, "overall_survival_months"),
             fill = pull(clinical_data, "er_status"))) +
  geom_boxplot(alpha = 0.7) +
  labs(title = "Box Plot of ER Status and Overall Survival Months",
       x = "ER Status",
       y = "Overall Survival Months",
       fill = "ER Status") +
  theme_minimal()

```

```{r}

clinical_data %>%
  ggplot(aes(x = factor(cut(age_at_diagnosis, breaks = 20)),
             y = factor(cut(mutation_count, breaks = 20)),
             fill = tumor_size)) +
  geom_tile(color = "white") +
  labs(title = "Tile Plot for Multivariate Visualization",
       x = "Age at Diagnosis",
       y = "Mutation Count",
       fill = "Tumor Size") +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +
  theme_minimal()
```

```{r}

library(tidyverse)

# Select relevant columns
selected_columns <- clinical_data %>%
  dplyr::select(age_at_diagnosis, mutation_count, tumor_size, overall_survival_months)

# Calculate correlation matrix
cor_matrix <- cor(selected_columns)

# Convert the correlation matrix to long format
cor_data <- as.data.frame(as.table(cor_matrix))
colnames(cor_data) <- c("Variable1", "Variable2", "Correlation")

# Create a heatmap
cor_data %>%
  ggplot(aes(x = Variable1, y = Variable2, fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
  labs(title = "Correlation Heatmap",
       x = "Variables",
       y = "Variables") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

# Write images

bla bla bla

```{r}
#ggsave("02_missing_data.png", 
#       path = "../doc/images/",
#       plot = missing_data,
#       width = 8,
#       height = 5)
```

# Write HTML

```{r}
#dont know how 
```
