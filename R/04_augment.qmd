---
title: "04_augment"
format: html
editor: visual
---

# Load data

```{r}
gene_expression <- read_tsv(
  file = "../data/gene_expression.tsv")
clinical_data <- read_tsv(
  file = "../data/clinical_data_clean.tsv")
mutations <- read_tsv(
  file = "../data/mutations.tsv")
```

# Expression augmentation

Adding over_all survival to the gene_expression data frame

```{r}
gene_expression_aug <- bind_cols(gene_expression, 
                             clinical_data |> 
                               select(overall_survival))
```

As we would like to apply linear regression models to each gene in the data set, we would like to make it longer.

```{r}
gene_expression_aug_long <- 
  gene_expression_aug |> 
  pivot_longer(
    cols = -overall_survival,
    names_to = "gene",
    values_to = "expr_level"
  )
```

# Mutation augmentation

For the mutation analysis we would like to determine which mutation is the most abundant in breast cancer. Therefore, each mutation is converted to either 1 mutation and 0 no mutation.

```{r}
mutations_aug <- 
  mutations |> 
   mutate_all(~case_when(. != "0" ~ 1,
                         TRUE ~ 0))
```

As we would like to determine how many mutations are in each gene, the data frame is made longer.

```{r}
mutations_aug_long <- 
  mutations_aug |> 
  pivot_longer(
    cols = ends_with("_mut"),
    names_to = "gene",
    values_to = "Count"
  )
```

# Clinical data augmentation

Age group

```{r}
clinical_data <- 
  clinical_data |>
  mutate(age_group = cut(age_at_diagnosis,
                         breaks = c(0, 40, 60, 80, Inf),
                         labels = c("0-40", "41-60", "61-80", "81+")))
```

Log transformed tumor_size and mutation count

```{r}
clinical_data <- clinical_data |>   
  mutate(     
    tumor_size_log = log10(tumor_size),     
    mutation_count_log = log10(mutation_count)   
    )
```

# Write data

```{r}
write_tsv(x = gene_expression_aug_long, 
          file = "../data/gene_expression_aug.tsv")
write_tsv(x = mutations_aug_long, 
          file = "../data/mutations_aug.tsv")
write_tsv(x = clinical_data, 
          file = "../data/clinical_data_aug.tsv")
```
